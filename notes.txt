Day-1 (14-march-2022)
----------------------
HTML pre-requistes:
-	formatting tags
	-	heading tags
	-	<b>, <i>, <u>, <p>, <div>, <span>
-	lists
	-	ordered list	
	-	unorderes list
-	tables
-	forms
-	images

HTML 5 features



															Javascript
															----------
What is the difference between programming language and scripting language?
	programming language
		source code		→	intermediate code  			→	run time 
						    (is stored in the disk)
	scripting language
		source code		→	is parsed by the interpreter 	→	browser executes the parsed code
							on the fly

should we install any software to work with javascript?
	NO
	every browser has it's own javascript engine to execute javascript code.

what is javascript?
	it is a client-side scripting language
	In recent days, Javascript also work on server side.

	MEAN stack	(MongoDB, Express, Angular, Node)
	MERN stack	(MongoDB, Express, React, Node)


	Node JS (or) Node 	→	which is used to run Javascript programs in the server.

client softwares (browser):
	firefox
	chrome		→	v8 engine	(jaavscript)
	safari		
	edge (internet explorer)

HTML	→	to design static web pages
CSS		→	to apply styling

Javascript is used to place dynamic content into the html page, client-side validations.
It is a lightweight programming language.
reacts to events
to perform client-side validations


static web site		→ 	will offer static content
dynamic web site	→ 	content is changed for every user.



1) place our javascript code in our html.

		<head>
			<script type="text/javascript">
				javascript code
			</script>
		</head>

		<body>
			<script type="text/javascript">
				javascript code
			</script>
		</body>

2) write javascript code in a separate ".js" file
		link this ".js" file in a html code.

Javascript IDEs:
----------------
1) VS Code
2) Sublime
3) Atom
4) Brackets


datatype	:	what type of data holding by the variable currently.
variable	:	it is a placeholder of data in the memory.

should we declare variables in Javascript?
	NO

datatypes in javascipt?
	number
	string
	boolean
	null

declaring variables?
	let, var, const

variable naming rules:
+	it can have alphabets, digits, underscore
+	it cannot have spaces or any other punctuation symbols
+	variable names are case sensituve


operators:
+	arithmetic operators	(calculate)
		+	-	*	/	%	++	--
		+=	-=	*=	/=	%=
+	relational operators	(comparision)
		>		<	==	>=	<=	!=
+	logical operators		(combining conditions)
		&&   (and)		||  (or)		!	(not)
+	conditional operator
		(condition) ? true-statement : false-statement;


control structures:
-------------------
set of keywords that alter the program execution sequence.

1) decision ming statements
	a) if		: bi-directional decision making statement

		if (condition)
			true-statement;
		else
			false-statement;
	b) switch	:	multi-directional decision making statement.

		switch (var) {
			case   value-1 : statement(s);
						     break;
			case   value-2 : statement(s);
							 break;
			case   value-3 : statement(s);
						     break;

			...		...		...
					default : statement(s);
							  break;
		}
2) looping statements	
	a) for		:	statements are executed repeatedly as long as the condition is true.

			for(initialization; condition; update expression) {
				statement(s);
			}

	b) while	:	statements are executed repeatedly as long as the condition is true.

			while(condition) {
				statement(s);
			}

	c) do..while	:	statements are executed repeatedly as long as the condition is true.

			do {
				statement(s);
			} while (condition);

	* for and while loop are called top-tested (entry-tested) loops.
	  whereas do..while loop is called bottom-tested (exit-tested) loops.

	* minimum number of iterations in for and while are 0.
	  whereas in do..while it is 1.


pre-defined dialogboxes:
	alert()
	prompt()
	confirm()


accept a number from the user. i find whether the given number is +ve or -ve.
accept a number. find whether it is even or odd.


accept two numbers and an arithmetic operator. perform the operation 
and print the result.

parseInt(string-form-number) : convert the input into 'int' type.
parseFloat(string-form-number) : convert the input into 'float' type.


write a program to print natural numbers from 1 and n, where n is given by the user.
write a program to print natural numbers from 1 and n in reverse order, where n is given by the user.


Math object:
	providing pre-defined methods (functions).


Day-2  (15-mar-2022)
----------------------------------------------------
How to choose between for and while loop?
+	for loop is used when we want to execute set of statements for a finite number of times.
+	while loop is used when we want to execute set of statements for an indefinite number of times.

write a program to print the factorial of a given number?
	5! = 5*4*3*2*1

break: whenever a break statement is encountered, the control comes out of the loop without 
		executing the remaining statements in the current iteration.

continue: whenever a continue statement is encountered, the control go to the next iteration without 
		executing the remaining statements in the current iteration.


String object:
---------------
var str = 'hello';

every string has an internal indexer. using the 0-based index, we can access individual characters
like an array.
string is not a primitive type. 
it is an object.

1) length property

2) charAt()
3) concat()
4) startsWith()
5) endsWith()
6) indexOf()
7) lastIndexOf()
8) substr()
9) substring()
10) toLowerCase()
11) toUpperCase()
12) trim()
13) charCodeAt()	
14) includes()		: to check whether the string contains specified string or not
15) slice()
16) split()


ASCII  (American Standard Code for Information Interchange):
-------------------------------------------------------------
256 characters ( 0 to 255)

A    65				a   97			0   48			space		32
B    66				b   98			1	49			enter   	13
..					..				..				backspace	7
Z    90				z   122			9	57			tab			8


write a program to reverse a given string.


Arrays:
------------
+	array is a collection of values.
+	0-based index
+	elements can be modified
+	arrays in javascript are dynamic in nature.
+	every array is an object.



defining array:
------------------
names = new Array('Ramesh', 'Geetha', 'Kishore');
document.write(names + '<br>');


Arrays methods:
------------------
1) concat()
2) fill()
3) push()	: to add new elements at the end of the array.
4) pop()	: remove the last element of the array
5) unshift() : to add new element in the beginning of the array.
6) shift()	:  to delete the first element 
7) slice()	: select part of an array, and return them as new array.
8) splice() : add/remove elements from an array.

Date object:
-------------------
1) new Date()
2) new Date(year, month, day, hours, minutes, secinds, milliseconds)
3) new Date(string-form-date)

Date methods:
-------------------
1) getFullYear()
2) getMonth()	: 0 - 11
3) getDate()	: 1 - 31
4) getHours()
5) getMinutes()
6) getSeconds()
7) getMilliSeconds()
8) getTime()
9) getDay()		: 0 - 6		(weekday)

10) setDate()
..

accept date of birth from the user. calculate his/her age in years.


											functions	
											---------
It is a set of statements meant to perform a single task.											---------
It can be invoked by using its name.
It optionally take parameters on which it works. These parameters behave like local variables inside the function.
It optionally return a value to caller.

	defining a function:
	--------------------
	syntax:
	---------
	function   name(parameter-1, parameter-2, ...) {
			// code to perform single task
	}

	calling a function:
	-------------------
	[variable = ] name(arg-1, arg-2, ...);



											DOM
											----
DOM stands for Document Object Model.

Window object:
----------------
it represent the browser window.
all global javascript objects, functions, variables automatically become members of window object.
global variables are properties of window object
global functions are methods of windiw object.

window.open()
window.close()

Location object
History object

HTML DOM:
---------
allows javascript to access all elements and their attributes of HTML document.
HTML DOM is a tree of objects.
it is the programming interface of HTML.
it allows us to change the content of elements, add and delete elements, change the styles and handle the events.
Document object is the owner of all objects of HTML page.

Finding HTML elements:
----------------------
document.getElementById(id)
document.getElementsByTagName(tagName)
document.getElementsByClassName(cssClassName)
document.querySelectorAll(selector)


Day-3  (16-mar-2022)
----------------------------------------------------
How a javascript program is executed?

						Execution Context

			Memory Allocation Phase				Code Execution Phase


Hoisting:
---------
It is javascript's default behaviour of moving all declarations to the top of the current scope
(current script or current function).


What is "undefined" and "not defined"?


Assignment:
-----------
take the system date.
print if the week day is saturday / sunday - "weekend"
if the week day is from monday / tuesday = "still beginning of the week"
otherwise - "mid of the week".

use "switch", not "if".

Assignment:
-----------
accept a password.
check whether the given password is valid or not considering the following ...
* minimum should be of 6 characters.
* one upper case character
* lower case characters are allowed
* one digit
* one special symbol - either # or  _ or *.

print "valid password" or "invalid password".


									Regular Expressions
									-------------------
It is a pattern of characters.
The pattern is used to do "pattern-matching" functions on the given text.

g 	-	perform a global match
i 	-	case insensitive match
m 	-	perform multiline matching


									Meta characters
									---------------
.	-	finds a single character, except new line or line terminator
\w	-	find a word character
\W	-	find a non-word character
\d 	-	find a digit
\D	-	find a non-digit character
\s 	-	find a whitespace character
\S	-	find a non-whitespace character

									Quantifiers (Occurance indicators)
									----------------------------------
n+	-	matches any string that contain atlest one n.
n*	-	matches any string that contain zero or more occurances of n.
n?	-	matches any string that contain zero or one occurance of n.
n{X} -	matches any string that contain sequence of X n's.
n{X,Y}
n{X,}
n$	-	matches any string with n at the end of it
^n	-	matches any string with n at the beginning of it


									methods
									---------
exec()		method tests for a match in the string.
			return a result array if match is found, otherwise return null.

test()		also tests for a match in the string
			return true/false


									ES 6 (ECMASCRIPT 2015)
									-----------------------
1. let and const keyword is introduced.
2. SUGAR syntaxes
	syntactical enhancements that increase the ease of programming and 
	offer readability.

	a) multi-line string.

3. default parameters
	if a parameter is assigned a value in the function definition, 
	that value is used when the corresponding argument is missing
	during the function call.

4. template strings	
	we can insert values of variables inside a string.
	it is created using backtick (`)
	it can also have multiple lines
	it can refer to variables and expressions using ${expr}

5. arrow function
	arrow functions are shorthand way of defining a function.
	can be used wherever a normal function is used.

	syntax:
	-------
	(params) => statement			

	(params) => {
		statements;
	}


Day-4  (17-mar-2022)
----------------------------------------------------
scope & lexical environment

Functions are called FIRST CLASS CITIZENS.
+	you can store functions in variables.
+	pass them to other functions as arguments
+	and return them from other functions as values.



scope: 
+	scope means boundary.
+	it represent where we can access a specific variable/function in our class.
+	scope always depend on the lexical environment

lexical environment:
+	It is the local memory + lexical environment of it's parent

	<script>
        function a() {
            var b = 10;
            c();
            function c() {

            }
        }
        a();
        console.log(b);
    </script>

'c' is lexically sit inside a() function
'a' is lexically inside global execution context.


IIFE:
------
Immediately Invoked Function Expression

block:
------
set of statements enclosed within curly braces. { }

let and const are block scoped variables.
var is a function scoped variable.



filter(function):
-----------------
	to collect elements that are matching with the given predicate in an array.


reduce():
---------



rest parameters:
----------------
it is a parameter that is prefixed with "..." symbol.
which represent group of parameters.

Assignment:
-----------
write a function that takes a list of numbers and return the average of them.


spread operator:
----------------
it takes an array (or any iterable) and spread it's values.


destructuring:
--------------
it is also known as destructuring assignment.
it is a javascript expression that makes it possible to unpack values from arrays, or properties from objects
into distinct values.


Day-5 (18-Mar-2022)
-------------------------------------------
Develop a calculator application.


													OOPS
										(Object Oriented Programming System)

class: 
------
+	it is a template for objects.
+	define properties and methods.
+	class is simply a definition.
+	no memory is allocated for a class.

syntax:
-------
	class    className {
		constructor() {
			// code
		}
		method() {
			// code
		}
	}

constructor:
------------
+	it is a special function which is executed automatically whenever an object is created.
+	it is used to initialize properties of an object.


object:
-------
+	it is a variable whose datatype is class
+	memory is allocated only when we create an object for a class.

syntax:
-------
	p = new className(arg-1, arg-2, ...);

setters and getters:
--------------------
+	set method (setter or mutator) is used to modify the property of a class
+	get method (getter or accessor) is used to retrieve the property of a class.


static properties:
------------------
static properties are used to store common data for a property across all objects.

static methods:
---------------
+	any method must be invoked (called) using an object.
+	but static method can be invoked directly with the class name.

inheritance:
------------
+	creating a new class (derived class / sub class) from an existing class (base class / super class)
+	"extends" keyword should be used to create a derived class.
+	derived class can access all the features of base class as well as any extra features that	
	are added to it.
+	it represent an "is-A" relationship.
+	it is mainly for code reusability.

syntax:
-------
	class SubClass extends SuperClass {
		// code
	}


Collections:
-------------
1) Set:
-------
+	collection of unique values.

methods:
--------
a) new Set()
b) add()
c) delete()
d) has()
e) forEach()
f) values()


2) Map:
--------
+	it is a collection of key-value pairs.
+	key and value together known as entry.
+	values are accessed using keys.
+	key cannot be duplicated.

methods:
----------
a) new Map()
b) set()
c) get()
d) delete()
e) has()
f) forEach()
g) entries()





















									



























